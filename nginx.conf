events {}

http {
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    client_max_body_size 2M;

    proxy_connect_timeout 10s;
    proxy_read_timeout 60s;
    proxy_send_timeout 10s;

    upstream bot_upstream {
        server bot.railway.internal:8000;
    }

    upstream cobalt_upstream {
        server cobalt.railway.internal:9000;
    }

    server {
        server_name _;
        listen 80;

        # Rate limiting
        limit_req zone=one burst=20 nodelay;

        # Прокси для Telegram webhook — очень важно точное совпадение пути
        location = /webhook {
            proxy_pass http://bot_upstream/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering off;
        }

        # Прокси для остальных запросов к боту
        location / {
            proxy_pass http://bot_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Прокси для Cobalt API
        location /cobalt/ {
            rewrite ^/cobalt/(.*)$ /$1 break;
            proxy_pass http://cobalt_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /tunnel {
            proxy_pass http://cobalt_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }
}
