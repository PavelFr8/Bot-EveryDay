"""Check

Revision ID: ccf6b731ce6d
Revises: 84d489e4bad1
Create Date: 2025-08-07 02:24:03.201549

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ccf6b731ce6d"
down_revision: Union[str, None] = "84d489e4bad1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_apscheduler_jobs_next_run_time"),
        table_name="apscheduler_jobs",
    )
    op.drop_table("apscheduler_jobs")
    op.drop_table("notifications")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "notifications",
        sa.Column("text", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("notifications_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("notifications_pkey")),
    )
    op.create_table(
        "apscheduler_jobs",
        sa.Column(
            "id", sa.VARCHAR(length=191), autoincrement=False, nullable=False
        ),
        sa.Column(
            "next_run_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "job_state",
            postgresql.BYTEA(),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("apscheduler_jobs_pkey")),
    )
    op.create_index(
        op.f("ix_apscheduler_jobs_next_run_time"),
        "apscheduler_jobs",
        ["next_run_time"],
        unique=False,
    )
    # ### end Alembic commands ###
